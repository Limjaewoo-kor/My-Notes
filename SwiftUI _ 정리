
SwiftUi


struct와 class의 차이

가장 큰 차이점은 구조체는 값타입, 
클래스는 참조타입이라는 점이다.


Identifiable,Codable,Hashable

Identifiable
- struct, class를 정의할 때 ID값이 필요한 경우 해당 protocol을 채용한다.

Codable
- Codable은 Encodable과 Decodable이 합쳐진것이다.
- Encodable -> data를 Encoder에서 변환해주려는 프로토콜로 바꿔주는 것
- Decodable -> data를 원하는 모델로 Decode 해주는 것

Hashable
- 일반적인 딕셔너리 형식과 같이 struct를 key, value 화 시킨다. 



dismiss()란?

특정 동작을 수행하고 이전 페이지로 돌아갈때 사용하며,
ios13,14 에서는
선언 - @Environment(\.presentationMode) var presentationMode
사용 - presentationMode.wrappedValue.dismiss()

iOS15에서는
선언 - @Environment(\.dismiss) private var dismiss
사용 - dismiss()


onDelete()와 onMove()
List{ } 뒤쪽에 붙여 사용하며, 리스트안에 각 요소들을 슬라이드했을때 이동버튼이나 삭제 버튼을 만들어준다.

NavigationView{}, Vstack, Hstack, Zstack등을 이용하여 구도를 잡을 수 있으며 NavigationView의 경우 NavigationTilte()를 이용하여 제목을 달아줄 수 있다.


Database는 기본적으로 앱 자체에 CoreData라는 데이터베이스를 사용할 수 있으며, 외부 데이터 베이스의 경우 구글의 FireBase를 많이 사용하는 것 같다.
FireBase는 realDatabase도 따로 있으며, Auth나 모니터링에도 이용할 수 있다.



중첩구조체의 경우 아래와 같이 사용한다

struct Kakao {
	var FaceBook : FaceBook
	var documents : [Document]
	
	struct FaceBook {
		var total_count : Int
		var pageable_count : Int
		var is_end : Bool
	}
	
	struct Document {
		var title : String
		var play_time : Int
		var thumbnail : String
		var url : String
		var datetime : String
		var author : String
	}
}


